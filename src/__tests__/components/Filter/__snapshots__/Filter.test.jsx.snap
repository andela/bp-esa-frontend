// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Filter /> should render as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Filter
    filterSet="automationStatus"
    handleFilterChange={[MockFunction]}
    options={Array []}
    title="Automation Status"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="filter-title"
          onClick={[Function]}
        >
          <span
            className="title"
          >
            Automation Status
          </span>
          <i
            className="fa fa-angle-down"
          />
        </div>,
        <ul
          className="filter-options"
        />,
      ],
      "className": "filter",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="title"
            >
              Automation Status
            </span>,
            <i
              className="fa fa-angle-down"
            />,
          ],
          "className": "filter-title",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Automation Status",
              "className": "title",
            },
            "ref": null,
            "rendered": "Automation Status",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa fa-angle-down",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "filter-options",
        },
        "ref": null,
        "rendered": Array [],
        "type": "ul",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="filter-title"
            onClick={[Function]}
          >
            <span
              className="title"
            >
              Automation Status
            </span>
            <i
              className="fa fa-angle-down"
            />
          </div>,
          <ul
            className="filter-options"
          />,
        ],
        "className": "filter",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="title"
              >
                Automation Status
              </span>,
              <i
                className="fa fa-angle-down"
              />,
            ],
            "className": "filter-title",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Automation Status",
                "className": "title",
              },
              "ref": null,
              "rendered": "Automation Status",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fa fa-angle-down",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "filter-options",
          },
          "ref": null,
          "rendered": Array [],
          "type": "ul",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Filter Component should render as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Filter
    filterSet="automationStatus"
    handleFilterChange={[MockFunction]}
    options={Array []}
    title="Automation Status"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="filter-title"
          onClick={[Function]}
        >
          <span
            className="title"
          >
            Automation Status
          </span>
          <i
            className="fa fa-angle-down"
          />
        </div>,
        <ul
          className="filter-options"
        />,
      ],
      "className": "filter",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="title"
            >
              Automation Status
            </span>,
            <i
              className="fa fa-angle-down"
            />,
          ],
          "className": "filter-title",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Automation Status",
              "className": "title",
            },
            "ref": null,
            "rendered": "Automation Status",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa fa-angle-down",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "filter-options",
        },
        "ref": null,
        "rendered": Array [],
        "type": "ul",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="filter-title"
            onClick={[Function]}
          >
            <span
              className="title"
            >
              Automation Status
            </span>
            <i
              className="fa fa-angle-down"
            />
          </div>,
          <ul
            className="filter-options"
          />,
        ],
        "className": "filter",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="title"
              >
                Automation Status
              </span>,
              <i
                className="fa fa-angle-down"
              />,
            ],
            "className": "filter-title",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Automation Status",
                "className": "title",
              },
              "ref": null,
              "rendered": "Automation Status",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fa fa-angle-down",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "filter-options",
          },
          "ref": null,
          "rendered": Array [],
          "type": "ul",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
