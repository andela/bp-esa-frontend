// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Update Tab should render component successfully 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UpdateTab
    handleUpdates={[MockFunction]}
    numberOfItems={1}
    view="listView"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <button
        className="update-tab false"
        onClick={[MockFunction]}
        type="button"
      >
        Load new updates  [
        1
        ]
      </button>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "Load new updates  [",
          1,
          "]",
        ],
        "className": "update-tab false",
        "onClick": [MockFunction],
        "type": "button",
      },
      "ref": null,
      "rendered": Array [
        "Load new updates  [",
        1,
        "]",
      ],
      "type": "button",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <button
          className="update-tab false"
          onClick={[MockFunction]}
          type="button"
        >
          Load new updates  [
          1
          ]
        </button>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Load new updates  [",
            1,
            "]",
          ],
          "className": "update-tab false",
          "onClick": [MockFunction],
          "type": "button",
        },
        "ref": null,
        "rendered": Array [
          "Load new updates  [",
          1,
          "]",
        ],
        "type": "button",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
