# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details

version: 2
defaults: &defaults
  docker:
    - image: cypress/base:10
    - image: circleci/node:10.15.0
      environment:
        GOOGLE_PROJECT_ID: bench-projects
        GOOGLE_COMPUTE_ZONE: us-central1-a
  working_directory: ~/esa_frontend_repo

attach_workspace: &attach_workspace
  attach_workspace:
    at: ~/esa_frontend_repo

persist_to_workspace: &persist_to_workspace
  persist_to_workspace:
    root: .
    paths: .

install_npm_packages: &install_npm_packages
  run:
    name: Install ESA Frontend dependencies
    command: |
      yarn install

filters: &filters
  filters:
    branches:
      only:
        - develop
        - master

jobs:
  checkout_repo:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-   
      - *install_npm_packages
      - save_cache:
          paths:
            - node_modules
            - ~/.cache/Cypress
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - *persist_to_workspace

  run_vulnerability_check:
    <<: *defaults
    steps:
      - *attach_workspace
      - *install_npm_packages
      - run:
          name: Scan for vulnerabilities in npm packages
          command: |
            yarn check --integrity

  test_javascript_report:
    <<: *defaults
    steps:
      - *attach_workspace
      - run:
          name: Set up codeclimate test reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run tests and upload coverage
          command: |
            ./cc-test-reporter before-build
            yarn test
            ./cc-test-reporter after-build --coverage-input-type lcov --exit-code $?
      - store_artifacts:
          path: coverage
          prefix: coverage

  test_ui_flow:
    <<: *defaults
    steps:
      - *attach_workspace
      - run:
          name: Starting ESA frontend in the background
          command: yarn start
          background: true
      - run:
          name: Run E2E tests
          command: |
            yarn cy:run
          when: on_success
  
  deploy_staging: # Deploy application to GCP staging
    <<: *defaults
    steps:
      - setup_remote_docker
      - *attach_workspace
      - run:
          name: Building Production files
          command: yarn install && yarn build
      - run:
          name: Build Docker image and deploy application to staging
          command: chmod +x scripts/deploy.sh && scripts/deploy.sh

workflows:
  version: 2
  build_deploy:
    jobs:
      - checkout_repo
      - run_vulnerability_check:
          requires:
            - checkout_repo
      - test_javascript_report:
          requires:
            - checkout_repo
            - run_vulnerability_check
      - test_ui_flow:
          requires:
            - checkout_repo
            - run_vulnerability_check
            - test_javascript_report
      - deploy_staging:
          requires:
            - checkout_repo
            - test_javascript_report
            - test_ui_flow
          <<: *filters
